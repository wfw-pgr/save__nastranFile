import os, sys
import numpy as np

# ========================================================= #
# ===  save__nastranFile                                === #
# ========================================================= #

def save__nastranFile( points=None, cells=None, matNums=None, outFile="nastran.bdf", index_plus_1=True ):

    # ------------------------------------------------- #
    # --- [1] Arguments                             --- #
    # ------------------------------------------------- #
    if ( points         is None ): sys.exit( "[save__nastranFile] points == ??? " )
    if ( cells          is None ): sys.exit( "[save__nastranFile] cells  == ??? " )
    if ( type( points ) is list ): points  = np.array( points )
    if ( type( cells  ) is list ): cells   = np.array( cells  )
    if ( matNums        is None ): matNums = np.ones( (cells.shape[0],) )
    
    # ------------------------------------------------- #
    # --- [2] Open / Begin Bulk statement           --- #
    # ------------------------------------------------- #
    f = open( outFile, "w" )
    f.write( "$Generated by nkMeshRoutines.save__nastranFile.py by N.K." )
    f.write( "BEGIN BULK" + "\n" )

    # ------------------------------------------------- #
    # --- [3] add GRID Card                         --- #
    # ------------------------------------------------- #
    nPoints    = points.shape[0]
    point_card = np.array( np.repeat( "GRID", nPoints ), dtype=object )
    point_nums = np.arange( 1, nPoints+1 )
    point_tags = np.zeros( (nPoints,) )
    points_    = np.concatenate( [point_card[:,None], point_nums[:,None], point_tags[:,None], points], axis=1 )
    np.savetxt( f, points_, fmt=",".join( ["%s","%d","%d","%15.8e","%15.8e","%15.8e"] ) )
    
    # ------------------------------------------------- #
    # --- [4] add CTETRA Card                       --- #
    # ------------------------------------------------- #
    nCells     = cells.shape[0]
    tetra_card = np.array( np.repeat( "CTETRA", nCells ), dtype=object )
    tetra_nums = np.arange( 1, nCells+1 )
    if ( index_plus_1 ):
        cells = cells + 1
    tetras_    = np.concatenate( [tetra_card[:,None],tetra_nums[:,None],matNums[:,None],cells], axis=1 )
    np.savetxt( f, tetras_, fmt=",".join( ["%s","%d","%d","%d","%d","%d","%d"] ) )
    
    # ------------------------------------------------- #
    # --- [5] ENDDATA & Close File                  --- #
    # ------------------------------------------------- #
    f.write( "ENDDATA" + "\n" )
    f.close()

        
# ========================================================= #
# ===   実行部                                          === #
# ========================================================= #

if ( __name__=="__main__" ):

    import nkMeshRoutines.load__meshio as lms
    mshFile = "msh/model.msh"
    ret     = lms.load__meshio( mshFile=mshFile, returnType="dict" )
    points  = np.array( ret["points"] )
    cells   = np.array( ret["cells"]["tetra"] )
    save__nastranFile( points=points, cells=cells, outFile="msh/test.bdf" )


    # ------------------------------------------------- #
    # --- [2] write nastranData                     --- #
    # ------------------------------------------------- #

    # array = np.array( [ [ "GRID", 1, 2, 1.0, 2.0, 3.0 ],
    #                     [ "GRID", 1, 2, 1.0, 2.0, 3.0 ],
    #                     [ "GRID", 1, 2, 1.0, 2.0, 3.0 ],
    #                     [ "GRID", 1, 2, 1.0, 2.0, 3.0 ] ], dtype=object )
